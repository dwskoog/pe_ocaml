(* PROBLEM --
 * Consider all integer combinations of a^(b) for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 *
 *     2^(2)=4, 2^(3)=8, 2^(4)=16, 2^(5)=32
 *     3^(2)=9, 3^(3)=27, 3^(4)=81, 3^(5)=243
 *     4^(2)=16, 4^(3)=64, 4^(4)=256, 4^(5)=1024
 *     5^(2)=25, 5^(3)=125, 5^(4)=625, 5^(5)=3125
 *
 * If they are then placed in numerical order, with any repeats removed, we get
 * the following sequence of 15 distinct terms:
 *
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 *
 * How many distinct terms are in the sequence generated by
 * a^(b) for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 *
 * SOLUTION --
 *)
module Big_int_set = Set.Make(struct
                                type t = Big_int.big_int
                                let compare = Big_int.compare_big_int
                              end)

let pow = Big_int.power_int_positive_int

let seq lbd ubd =
  let rec helper i s =
    if i < lbd then s
    else helper (i-1) (i::s)
  in helper ubd []

let prods =
  let bs = seq 2 100 in
  let rec helper rem_as set =
    match rem_as with
    | [] -> set
    | a::atl ->
      let pows = List.map (pow a) bs in
      let nset = List.fold_right Big_int_set.add pows set in
      helper atl nset
  in helper (seq 2 100) Big_int_set.empty

let _ = print_int (Big_int_set.cardinal prods); print_newline();;

